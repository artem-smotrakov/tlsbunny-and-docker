plugins {
    id 'java'
    id 'idea'
    id 'application'
    id 'jacoco'
    id 'org.sonarqube' version '2.7'
}

version '1.0-SNAPSHOT'
sourceCompatibility = 1.9
mainClassName = "com.gypsyengineer.tlsbunny.Main"

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

jacoco {
    toolVersion = '0.8.2'
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/core', 'src/main/vendor'
        }
    }

    test {
        java {
            srcDirs 'src/test/core', 'src/test/vendor'
        }
    }
}

test {
    if (project.hasProperty('tlsbunny.test.exclude')) {
        exclude project.property('tlsbunny.test.exclude')
    }

    if (project.hasProperty('tlsbunny.test.include')) {
        include project.property('tlsbunny.test.include')
    }

    systemProperty 'tlsbunny.output.standard.level',
            System.getProperty('tlsbunny.output.standard.level', 'important')

    systemProperty 'tlsbunny.sync.output',
            System.getProperty('tlsbunny.sync.output', 'limited')

    systemProperty 'tlsbunny.output.enable.highlighting',
            System.getProperty('tlsbunny.output.enable.highlighting', 'true')

    systemProperty 'tlsbunny.openssl.docker.image',
            System.getProperty('tlsbunny.openssl.docker.image',
                    'tlsbunny_openssl_tls13')

    systemProperty 'tlsbunny.wolfssl.docker.image',
            System.getProperty('tlsbunny.wolfssl.docker.image',
                    'tlsbunny_wolfssl_tls13')

    systemProperty 'tlsbunny.picotls.docker.image',
            System.getProperty('tlsbunny.picotls.docker.image',
                    'tlsbunny_picotls_tls13')
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

// build all docker images
task buildAllDocker() {
    dependsOn 'buildGnutlsDocker'
    dependsOn 'buildPicotlsDocker'
    dependsOn 'buildOpensslDocker'
    dependsOn 'buildH2ODocker'
    dependsOn 'buildNssDocker'
    dependsOn 'buildWolfsslDocker'
}

// check for crashes
task checkCrashes(type: Exec) {
    commandLine 'bash', 'scripts/check_logs_for_crashes.sh',
            'tlsbunny_openssl_tls13',
            'tlsbunny_wolfssl_tls13',
            'tlsbunny_picotls_tls13'
}

// tasks for running tests for GnuTLS

task buildGnutlsDocker(type: Exec) {
    commandLine 'docker',
            'build',
            '--no-cache',
            '--file', 'src/main/docker/gnutls/Dockerfile',
            '--tag',  'gnutls/server/tls13',
            '.'
}

// tasks for running tests for OpenSSL

task buildOpensslDocker(type: Exec) {
    commandLine 'docker',
            'build',
            '--no-cache',
            '--file', 'src/main/docker/openssl/Dockerfile',
            '--tag',  'tlsbunny_openssl_tls13',
            '.'
}

task runOpensslTests(type: Test) {
    description = 'Runs tests for OpenSSL'
    group = 'openssl'

    testLogging.showStandardStreams = true
    ignoreFailures = true
    outputs.upToDateWhen { false }

    include 'com/gypsyengineer/tlsbunny/vendor/test/tls13/openssl/**/*Tests*'
    exclude 'com/gypsyengineer/tlsbunny/vendor/test/tls13/openssl/**/*Fuzzing*'
}

task runOpensslFuzzing(type: Test) {
    description = 'Runs fuzzing for OpenSSL'
    group = 'openssl'

    testLogging.showStandardStreams = true
    ignoreFailures = true
    outputs.upToDateWhen { false }

    include 'com/gypsyengineer/tlsbunny/vendor/test/tls13/openssl/**/*Fuzzing*'
}

// tasks for running tests for picotls

task buildPicotlsDocker(type: Exec) {
    commandLine 'docker',
            'build',
            '--no-cache',
            '--file', 'src/main/docker/picotls/Dockerfile',
            '--tag',  'tlsbunny_picotls_tls13',
            '.'
}

// tasks for running tests for h2o + picotls

task buildH2ODocker(type: Exec) {
    commandLine 'docker',
            'build',
            '--no-cache',
            '--file', 'src/main/docker/h2o/Dockerfile',
            '--tag',  'h2o/server/tls13',
            '.'
}

// tasks for running tests for NSS

// builds a Docker images with NSS server
task buildNssDocker(type: Exec) {
    commandLine 'docker',
            'build',
            '--no-cache',
            '--file', 'src/main/docker/nss/Dockerfile',
            '--tag',  'nss/server/tls13',
            '.'
}

// tasks for running tests for WolfSSL

// builds a Docker images with WolfSSL server
task buildWolfsslDocker(type: Exec) {
    commandLine 'docker',
            'build',
            '--no-cache',
            '--file', 'src/main/docker/wolfssl/Dockerfile',
            '--tag',  'tlsbunny_wolfssl_tls13',
            '.'
}

task runWolfsslTests(type: Test) {
    description = 'Runs tests for WolfSSL'
    group = 'wolfssl'

    testLogging.showStandardStreams = true
    ignoreFailures = true
    outputs.upToDateWhen { false }

    systemProperty 'tlsbunny.output.enable.highlighting', 'false'

    include 'com/gypsyengineer/tlsbunny/vendor/test/tls13/wolfssl/**/*Tests*'
    exclude 'com/gypsyengineer/tlsbunny/vendor/test/tls13/wolfssl/**/*Fuzzing*'
}

task runWolfsslFuzzing(type: Test) {
    description = 'Runs fuzzing for WolfSSL'
    group = 'wolfssl'

    testLogging.showStandardStreams = true
    ignoreFailures = true
    outputs.upToDateWhen { false }

    systemProperty 'tlsbunny.fuzzer.full.configs', 'true'
    systemProperty 'tlsbunny.output.to.file', 'true'
    systemProperty 'tlsbunny.output.enable.highlighting', 'false'
    systemProperty 'tlsbunny.output.standard.level', 'important'
    systemProperty 'tlsbunny.sync.output', 'fuzzing'

    include 'com/gypsyengineer/tlsbunny/vendor/test/tls13/wolfssl/**/*Fuzzing*'
}

task runDeepPicotlsServerFuzzing(type: Test) {
    description = 'Runs deep fuzzing for Picotls server'
    group = 'picotls'

    testLogging.showStandardStreams = true
    ignoreFailures = true
    outputs.upToDateWhen { false }

    systemProperty 'tlsbunny.fuzzer.full.configs', 'true'
    systemProperty 'tlsbunny.output.to.file', 'true'
    systemProperty 'tlsbunny.output.enable.highlighting', 'false'
    systemProperty 'tlsbunny.output.standard.level', 'important'
    systemProperty 'tlsbunny.sync.output', 'fuzzing'
    systemProperty 'tlsbunny.output.file.level', 'important'

    filter.includeTestsMatching 'com.gypsyengineer.tlsbunny.vendor.test.tls13.picotls.server.FuzzingForPicotlsServer.deepHandshakeFuzzer'
    filter.includeTestsMatching 'com.gypsyengineer.tlsbunny.vendor.test.tls13.picotls.server.FuzzingForPicotlsServerWithClientAuth.deepHandshakeFuzzer'
}

task runDeepWolfsslServerFuzzing(type: Test) {
    description = 'Runs deep fuzzing for WolfSSL server'
    group = 'wolfssl'

    testLogging.showStandardStreams = true
    ignoreFailures = true
    outputs.upToDateWhen { false }

    systemProperty 'tlsbunny.fuzzer.full.configs', 'true'
    systemProperty 'tlsbunny.output.to.file', 'true'
    systemProperty 'tlsbunny.output.enable.highlighting', 'false'
    systemProperty 'tlsbunny.output.standard.level', 'important'
    systemProperty 'tlsbunny.sync.output', 'fuzzing'
    systemProperty 'tlsbunny.output.file.level', 'important'

    filter.includeTestsMatching 'com.gypsyengineer.tlsbunny.vendor.test.tls13.wolfssl.server.FuzzingForWolfsslServer.deepHandshakeFuzzer'
    filter.includeTestsMatching 'com.gypsyengineer.tlsbunny.vendor.test.tls13.wolfssl.server.FuzzingForWolfsslServerWithClientAuth.deepHandshakeFuzzer'
}

task runDeepOpensslServerFuzzing(type: Test) {
    description = 'Runs deep fuzzing for OpenSSL server'
    group = 'openssl'

    testLogging.showStandardStreams = true
    ignoreFailures = true
    outputs.upToDateWhen { false }

    systemProperty 'tlsbunny.fuzzer.full.configs', 'true'
    systemProperty 'tlsbunny.output.to.file', 'true'
    systemProperty 'tlsbunny.output.enable.highlighting', 'false'
    systemProperty 'tlsbunny.output.standard.level', 'important'
    systemProperty 'tlsbunny.sync.output', 'fuzzing'
    systemProperty 'tlsbunny.output.file.level', 'important'

    filter.includeTestsMatching 'com.gypsyengineer.tlsbunny.vendor.test.tls13.openssl.server.FuzzingForOpensslServer.deepHandshakeFuzzer'
    filter.includeTestsMatching 'com.gypsyengineer.tlsbunny.vendor.test.tls13.openssl.server.FuzzingForOpensslServerWithClientAuth.deepHandshakeFuzzer'
}
